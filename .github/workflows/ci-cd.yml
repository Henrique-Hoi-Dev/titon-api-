name: CI/CD Pipeline

on:
    push:
        branches: [staging, master]
    pull_request:
        branches: [staging]

env:
    NODE_VERSION: 20.12.2
    DATABASE_URL_DB: ${{ secrets.DATABASE_URL_DB }}
    DB_USER: ${{ secrets.DB_USER }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    DB_NAME: ${{ secrets.DB_NAME }}
    DB_PORT: ${{ secrets.DB_PORT }}
    DB_HOST: ${{ secrets.DB_HOST }}

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - run: yarn install --frozen-lockfile
            - run: yarn lint

    style:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - run: yarn install --frozen-lockfile
            - run: yarn style:check

    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_USER: ${{ env.DB_USER }}
                    POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
                    POSTGRES_DB: ${{ env.DB_NAME }}
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
            - run: yarn install --frozen-lockfile
            - run: yarn coverage
